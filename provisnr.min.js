!function(t){var e={collectResults:function(t,e){var r,o,n=!1,a={equallyFast:!1,iterations:{},fasterFunction:{name:"",fasterInPercentage:0,fasterInIterations:0}};return t.iterations>e.iterations?(r=t,o=e):t.iterations<e.iterations?(r=e,o=t):n=!0,n?a.equallyFast=!0:(a.fasterFunction.name=r.name,a.fasterFunction.fasterInPercentage=parseInt((r.iterations-o.iterations)/o.iterations*100,10),a.fasterFunction.fasterInIterations=r.iterations-o.iterations),a.iterations[t.name]=t.iterations,a.iterations[e.name]=e.iterations,a},issueError:function(t){return new Error(t)},testFunction:function(t){var r=e;return"object"!=typeof t?r.issueError("Provisnr requires options (object). Pass an options object."):"string"!=typeof t.type?r.issueError("Provisnr requires a type (string). Pass a type ('procedural'/'async') as part of the options object."):"number"!=typeof t.timeout?r.issueError("Provisnr requires a timeout (integer). Pass a timeout property as part of the options object."):"function"!=typeof t.callback?r.issueError("Provisnr requires a callback (function). Pass a callback as part of the options object."):"procedural"!==t.type&&"function"!=typeof t.complete?r.issueError("Provisnr requires a complete (function). Pass a complete as part of the options object."):void("procedural"===t.type?e.testProceFunction({timeout:parseInt(t.timeout,10),callback:t.callback,generator:t.generator}):e.testAsyncFunction({timeout:parseInt(t.timeout,10),callback:t.callback,generator:t.generator,complete:t.complete}))},testProceFunction:function(t){var e,r=(new Date).getTime(),o=0,n=t.timeout,a=t.callback,i=t.generator||function(){},s=i();for(e=0;n>o;e++)a(s),o=(new Date).getTime()-r;return e},testAsyncFunction:function(t){var e=0,r=(new Date).getTime(),o=0,n=t.timeout,a=t.callback,i=t.complete,s=t.generator||function(){},c=s(),u=function(){return o>=n?i(e):void a(function(){o=(new Date).getTime()-r,e++,u()},c)};u()},comparePerformance:function(t){var r=e;if("object"!=typeof t)return r.issueError("Provisnr requires options (object). Pass an options object.");if("string"!=typeof t.type)return r.issueError("Provisnr requires a type (string). Pass a type ('procedural'/'async') as part of the options object.");if("number"!=typeof t.timeout)return r.issueError("Provisnr requires a timeout (integer). Pass a timeout property as part of the options object.");if("object"!=typeof t.callbacks)return r.issueError("Provisnr requires a callback (function). Pass a callback as part of the options object.");if(2!==Object.keys(t.callbacks).length)return r.issueError("Provisnr requires callbacks (object), containing 2 methods for test comparison. Pass two methods to callbacks as part of the options object.");if("procedural"!==t.type&&"function"!=typeof t.complete)return r.issueError("Provisnr requires a complete (function). Pass a complete as part of the options object.");var o=t.type,n=t.generator||function(){},a=t.timeout,i=t.complete,s=t.callbacks,c=Object.keys(s),u=c[0],l=c[1],p={name:u,iterations:0},f={name:l,iterations:0};return"procedural"===o?(p.iterations=e.testProceFunction({timeout:a,generator:n,callback:s[u]}),f.iterations=e.testProceFunction({timeout:a,generator:n,callback:s[l]}),e.collectResults(p,f)):void e.testAsyncFunction({timeout:a,generator:n,callback:s[u],complete:function(t){p.iterations=t,e.testAsyncFunction({timeout:a,generator:n,callback:s[l],complete:function(t){return f.iterations=t,i(e.collectResults(p,f))}})}})}},r=function(){return{testFunction:e.testFunction,comparePerformance:e.comparePerformance}};"undefined"!=typeof module&&module.exports?module.exports=r():t.provisnr=r()}(this);